<?xml version="1.0" encoding="utf-8" ?>
<manifest>
  <control namespace="Dianamics" constructor="LookupTest" version="0.0.1" display-name-key="LookupTest" description-key="LookupTest description" control-type="virtual">
    <!-- property node identifies a specific, configurable piece of data that the control expects from CDS -->
    <property name="sampleProperty" display-name-key="Property_Display_Key" description-key="Property_Desc_Key" of-type="Lookup.Simple" usage="bound" required="true" />
    <property name="secondProperty" display-name-key="Property_Display_Key" description-key="Property_Desc_Key" of-type="Lookup.Simple" usage="bound" required="false" />
    <property name="inputProperty" display-name-key="Input Lookup" description-key="Input Lookup" of-type="Lookup.Simple" usage="input" required="false" />
    <!-- 
      Property node's of-type attribute can be of-type-group attribute. 
      Example:
      <type-group name="numbers">
        <type>Whole.None</type>
        <type>Currency</type>
        <type>FP</type>
        <type>Decimal</type>
      </type-group>
      <property name="sampleProperty" display-name-key="Property_Display_Key" description-key="Property_Desc_Key" of-type-group="numbers" usage="bound" required="true" />
    -->
    <resources>
      <code path="index.ts" order="1"/>
       <platform-library name="React" version="16.8.6" />
      <platform-library name="Fluent" version="8.29.0" />
      <!-- UNCOMMENT TO ADD MORE RESOURCES
      <css path="css/LookupTest.css" order="1" />
      <resx path="strings/LookupTest.1033.resx" version="1.0.0" />
      -->
    </resources>
    <feature-usage>     
      <uses-feature name="Utility" required="true" />      
    </feature-usage>
   
   
  </control>
</manifest>